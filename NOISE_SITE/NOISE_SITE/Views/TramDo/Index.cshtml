
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout_CMS.cshtml";
}


@section PageStyles
    {
    <link href="~/Content/cms/datatables.min.css" rel="stylesheet" />
    <link href="~/Content/cms/datatables.bootstrap.css" rel="stylesheet" />
    <link href="~/Content/cms/sweetalert.css" rel="stylesheet" />
    <style>
        .table-container .table-actions-wrapper {
            display: block;
        }
    </style>
}
<div class="page-bar">
    <ul class="page-breadcrumb">
        <li>
            <i class="icon-home"></i>
            <a href="/TramDo">Danh mục trạm quan trắc</a>
            <i class="fa fa-circle"></i>
        </li>
    </ul>
</div>


<h1 class="page-title"> Quản lý danh mục trạm đo </h1>

<div class="row">
    <div class="col-sm-12">
        <div class="portlet light bordered">
            <div class="portlet-body">
                <div class="table-container">
                    <div class="table-actions-wrapper" style="padding-bottom:10px">
                        <span> </span>
                        <button class="btn btn-sm green table-group-action-submit" id="btnCreate">
                            <i class="fa fa-plus"></i> Tạo mới
                        </button>
                    </div>
                    <table class="table table-striped table-bordered table-hover table-checkable order-column"
                           id="tbl_users">
                        <thead>
                            <tr>
                                <th class="no-sort"> STT </th>
                                <th class="no-sort"> Mã trạm đo </th>
                                <th class="no-sort"> Địa điểm do </th>
                                <th class="no-sort"></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="updateTramDoModal" class="modal fade" data-width="300" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Cập nhật thông tin trạm đo</h4>
            </div>
            <div class="modal-body">
                <form action="/TramDo/Update" method="post">
                    <div class="form-group">
                        <label for="" class="control-label">Mã trạm đo</label>
                        <div class="input-icon ">
                            <i class="fa"></i>
                            <input type="text" class="form-control" name="MaTramDo" readonly data-model="MaTramDo" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="" class="control-label">Địa điểm đo</label>
                        <div class="input-icon ">
                            <i class="fa"></i>
                            <input type="text" class="form-control" name="DiaDiem" data-model="DiaDiem" />
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary btn-submit">Lưu thông tin</button>
                <button type="button" class="btn btn-default close-edit" data-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

<div id="createTramDoModal" class="modal fade" data-width="300" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Cập nhật thông tin trạm đo</h4>
            </div>
            <div class="modal-body">
                <form action="/TramDo/Create" method="post">
                    <div class="form-group">
                        <label for="" class="control-label">Mã trạm đo</label>
                        <div class="input-icon ">
                            <i class="fa"></i>
                            <input type="text" class="form-control" name="MaTramDo" data-model="MaTramDo" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="" class="control-label">Địa điểm đo</label>
                        <div class="input-icon ">
                            <i class="fa"></i>
                            <input type="text" class="form-control" name="DiaDiem" data-model="DiaDiem" />
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary btn-submit">Tạo mới</button>
                <button type="button" class="btn btn-default close-edit" data-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>
@section PagePlugins
    {

    <script src="~/Scripts/cms/jquery.binding.js"></script>
    <script src="~/Scripts/cms/datatables.min.js"></script>
    <script src="~/Scripts/cms/datatables.bootstrap.js"></script>
    <script src="~/Scripts/cms/jquery.validate.js"></script>
    <script src="~/Scripts/cms/sweetalert.js"></script>
}


@section PageScripts{
    <script>

        $(".nav-item").removeClass("active");
        $(".user-manager").addClass("active");

        (function () {

            $("#btnCreate").on('click', function () {
                $('#createTramDoModal').modal();
            });

            $('#createTramDoModal').on('hidden.bs.modal', function () {
                $(this).find('form').trigger('reset');
            })
            $('#updateTramDoModal').on('hidden.bs.modal', function () {
                $(this).find('form').trigger('reset');
            })

            var initTable = function () {
                var table = $("#tbl_users");
                var user = null;
                var userOld = null;
                table.dataTable({
                    "ajax": {
                        "url": "/TramDo/List",
                        "type": "post"
                    },
                    "columns": [
                        {
                            "searchable": false,
                            "sortable": false,
                            "render": function (data, type, full, meta) {
                                return meta.row + 1;
                            }
                        },
                        {
                            "data": "MaTramDo",

                        },
                        {
                            "data": "DiaDiem"
                        },
                        {
                            "data": "MaTramDo",
                            "render": function (data, type, row, meta) {
                                return '<div class="btn-group ' + data + '" > \
                                                                             <button class="btn btn-xs green dropdown-toggle" type="button" data-toggle="dropdown" aria-expanded="false"> \
                                                                                Thao tác \
                                                                                <i class="fa fa-angle-down"></i> \
                                                                                </button> \
                                                                                <ul class="dropdown-menu pull-right" role="menu"> \
                                                                                <li> \
                                                                                <a href="javascript:;" class="action-edit">\
                                                                                    <i class="icon-pencil"></i> Chỉnh sửa thông tin \
                                                                                </a>\
                                                                                </li> \
                                                                                <li class="divider"></li>\
                                                                                <li> \
                                                                                 <a href="javascript:;" class="action-delete">\
                                                                                    <i class="icon-trash"></i> Xóa trạm đo\
                                                                                </a>\
                                                                                </li> \
                                                                                </ul> \
                                                                                </div>';
                            }
                        }
                    ],
                    "language": {
                        "aria": {
                            "sortAscending": ": activate to sort column ascending",
                            "sortDescending": ": activate to sort column descending"
                        },
                        "emptyTable": "Không có dữ liệu",
                        "info": "Hiển thị _START_ đến _END_ trên _TOTAL_ bản ghi",
                        "infoEmpty": "Không tìm thấy bản ghi",
                        "infoFiltered": "(Lọc từ _MAX_ tổng số bản ghi)",
                        "lengthMenu": "_MENU_ bản ghi",
                        "search": "Tìm kiếm",
                        "zeroRecords": "Không có bản ghi phù hợp",
                        "processing": "Đang xử lý dữ liệu ..."
                    },
                    "dom": "<'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r>t<'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>",
                    //"bStateSave": true,
                    "lengthMenu": [
                        [5, 15, 20, -1],
                        [5, 15, 20, "All"] // change per page values here
                    ],
                    "pageLength": 5,
                    "pagingType": "bootstrap_full_number",
                    "columnDefs": [

                        {
                            "targets": 'no-sort',
                            "orderable": false,
                        }
                    ],
                });

                table.on('click', ".action-delete", function (e) {
                    e.preventDefault();
                    var tr = $(this).closest('tr');
                    data = table.fnGetData(tr);
                    if (data) {
                        bootbox.confirm("Xác nhận xóa trạm đo này", function (result) {
                            if (result) {
                                $.post("/TramDo/Delete", {
                                    user: data,
                                    locked: true
                                }).done(function (xhr) {
                                    table.DataTable().ajax.reload();
                                    if (xhr.status == 'OK') {
                                        bootbox.alert("Xóa trạm đo thành công");
                                    } else {
                                        bootbox.alert("Xóa trạm đo thất bại, vui lòng thử lại!");
                                    }
                                });
                            }
                        });
                    }
                });
                table.on('click', ".action-edit", function (e) {
                    e.preventDefault();
                    var tr = $(this).closest('tr');
                    var data = table.fnGetData(tr);
                    if (data) {
                        oneWayBinding($("#updateTramDoModal form"), data);
                        $("#updateTramDoModal").modal({
                            backdrop: "static",
                            keyboard: false
                        });
                    }

                });
                function oneWayBinding($form, data) {
                    $form.find("[name]").each(function (index, input) {
                        if (data[$(input).attr('data-model')]) {
                            $(input).val(data[$(input).attr('data-model')]);
                        }
                    });
                }
             
                var createUserForm = $('#createTramDoModal form');
                createUserForm.validate({
                    errorElement: 'span', //default input error message container
                    errorClass: 'help-block help-block-error', // default input error message class
                    focusInvalid: true, // do not focus the last invalid input
                    ignore: "", // validate all fields including form hidden input
                    rules: {
                        MaTramDo: {
                            minlength: 4,
                            required: true
                        },
                        DiaDiem: {
                            required: true,
                        },
                    },

                    invalidHandler: function (event, validator) { //display error alert on form submit
                    },

                    errorPlacement: function (error, element) { // render error placement for each input type
                        var icon = $(element).parent('.input-icon').children('i');
                        icon.removeClass('fa-check').addClass("fa-warning");
                        icon.attr("data-original-title", error.text()).tooltip({
                            'container': 'body'
                        });
                    },

                    highlight: function (element) { // hightlight error inputs
                        $(element).closest('.form-group').removeClass("has-success").addClass(
                            'has-error'); // set error class to the control group
                    },

                    unhighlight: function (element) { // revert the change done by hightlight

                    },

                    success: function (label, element) {
                        var icon = $(element).parent('.input-icon').children('i');
                        $(element).closest('.form-group').removeClass('has-error').addClass(
                            'has-success'); // set success class to the control group
                        icon.removeClass("fa-warning").addClass("fa-check");
                    },

                    submitHandler: function (form) {
                        $(form).ajaxSubmit({
                            success: function (xhr) {
                                if (xhr.status === "OK") {
                                    table.DataTable().ajax.reload();
                                    //
                                    $('#createTramDoModal').modal('hide');

                                    //
                                    swal({
                                        title: 'Thông báo',
                                        text: 'Tạo mới trạm đo thành công!',
                                        type: 'success',
                                        confirmButtonText: "Đồng ý"
                                    }, function () { });
                                } else {
                                    swal({
                                        title: 'Thông báo',
                                        text: 'Có lỗi xảy ra vui lòng thử lại!',
                                        type: 'error',
                                        confirmButtonText: "Đồng ý"
                                    }, function () { });
                                }
                            }
                        })
                        // form[0].submit(); // submit the form
                    }
                });
                $('#createTramDoModal .btn-submit').on('click', function () {
                    createUserForm.trigger('submit');
                });

                var updateUserForm = $('#updateTramDoModal form');
                updateUserForm.validate({
                    errorElement: 'span', //default input error message container
                    errorClass: 'help-block help-block-error', // default input error message class
                    focusInvalid: true, // do not focus the last invalid input
                    ignore: "", // validate all fields including form hidden input
                    rules: {
                        MaTramDo: {
                            minlength: 4,
                            required: true
                        },
                        DiaDiem: {
                            required: true,
                        },
                    },

                    invalidHandler: function (event, validator) { //display error alert on form submit
                    },

                    errorPlacement: function (error, element) { // render error placement for each input type
                        var icon = $(element).parent('.input-icon').children('i');
                        icon.removeClass('fa-check').addClass("fa-warning");
                        icon.attr("data-original-title", error.text()).tooltip({
                            'container': 'body'
                        });
                    },

                    highlight: function (element) { // hightlight error inputs
                        $(element).closest('.form-group').removeClass("has-success").addClass(
                            'has-error'); // set error class to the control group
                    },

                    unhighlight: function (element) { // revert the change done by hightlight

                    },

                    success: function (label, element) {
                        var icon = $(element).parent('.input-icon').children('i');
                        $(element).closest('.form-group').removeClass('has-error').addClass(
                            'has-success'); // set success class to the control group
                        icon.removeClass("fa-warning").addClass("fa-check");
                    },

                    submitHandler: function (form) {
                        $(form).ajaxSubmit({
                            success: function (xhr) {
                                if (xhr.status === "OK") {
                                    table.DataTable().ajax.reload();
                                    //
                                    $('#updateTramDoModal').modal('hide');
                                    //
                                    swal({
                                        title: 'Thông báo',
                                        text: "Cập nhật trạm đo thành công",
                                        type: 'success',
                                        confirmButtonText: "Đồng ý"
                                    }, function () { });
                                } else {
                                    swal({
                                        title: 'Thông báo',
                                        text: 'Có lỗi xảy ra vui lòng thử lại!',
                                        type: 'error',
                                        confirmButtonText: "Đồng ý"
                                    }, function () { });
                                }
                            }
                        })
                        // form[0].submit(); // submit the form
                    }
                });
                $('#updateTramDoModal .btn-submit').on('click', function () {
                    updateUserForm.trigger('submit');
                });

                $("#edit-user").on('click', function () {
                    $('#detailUserModal').modal('hide');
                    if (userOld) {
                        oneWayBinding($("#updateTramDoModal form"), userOld);
                        $("#updateTramDoModal").modal({
                            backdrop: "static",
                            keyboard: false
                        });
                    }
                });
            }();
        })();


       

    </script>
}
